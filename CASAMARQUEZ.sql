CREATE TABLE USUARIOS (
    OID_USUARIO SMALLINT PRIMARY KEY,
    NICKNAME VARCHAR(64) NOT NULL UNIQUE,
    PASS VARCHAR(124) NOT NULL,
    ROL CHAR(3) NOT NULL, CHECK (ROL IN ('ADM','EMP','CLI'))
);

CREATE SEQUENCE Secuencia_Usuario INCREMENT BY 1 START WITH 1 MAXVALUE 99999; 
/

CREATE OR REPLACE TRIGGER Trigger_Secuencia_Usuario
BEFORE INSERT ON USUARIOS
FOR EACH ROW
DECLARE
valorSec NUMBER := 0;
BEGIN
SELECT Secuencia_Usuario.NEXTVAL INTO valorSec FROM DUAL;
:NEW.OID_USUARIO := valorSec;
END;
/

----------------------------------------------------------------------------------------------------------------

CREATE TABLE CLIENTES (
    OID_CLIENTE SMALLINT PRIMARY KEY,
    NOMBRE VARCHAR(124) NOT NULL,
    APELLIDO VARCHAR(124) NOT NULL,
    CORREO VARCHAR(124) NOT NULL UNIQUE,
    TELEFONO CHAR(9) NOT NULL UNIQUE, CHECK (REGEXP_LIKE(TELEFONO, '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]')),
    CUENTABANCARIA CHAR(20) NOT NULL UNIQUE, CHECK (REGEXP_LIKE(CUENTABANCARIA, '[A-Z][A-Z][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]')),
    DIRECCION VARCHAR(124) NOT NULL,
    OID_USUARIO SMALLINT NOT NULL UNIQUE,
    FOREIGN KEY(OID_USUARIO) REFERENCES USUARIOS
);

CREATE SEQUENCE Secuencia_Cliente INCREMENT BY 1 START WITH 1 MAXVALUE 99999;
/

CREATE OR REPLACE TRIGGER Trigger_Secuencia_Cliente
BEFORE INSERT ON CLIENTES
FOR EACH ROW
DECLARE
valorSec NUMBER := 0;
BEGIN
SELECT Secuencia_Cliente.NEXTVAL INTO :NEW.OID_CLIENTE FROM DUAL;
END;
/

----------------------------------------------------------------------------------------------------------------

CREATE TABLE PROVEEDORES (
    OID_PROVEEDOR SMALLINT PRIMARY KEY,
    NOMBREPROVEEDOR VARCHAR(124) NOT NULL,
    APELLIDOPROVEEDOR VARCHAR(124) NOT NULL,
    TELEFONOPROVEEDOR CHAR(9) NOT NULL, CHECK (REGEXP_LIKE(TELEFONOPROVEEDOR, '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]')),
    CORREOPROVEEDOR VARCHAR(124) NOT NULL,
    EMPRESA VARCHAR(124) NOT NULL
);

CREATE SEQUENCE Secuencia_Proveedor INCREMENT BY 1 START WITH 1 MAXVALUE 99999;
/

CREATE OR REPLACE TRIGGER Trigger_Secuencia_Proveedor
BEFORE INSERT ON PROVEEDORES
FOR EACH ROW
DECLARE
valorSec NUMBER := 0;
BEGIN
SELECT Secuencia_Proveedor.NEXTVAL INTO valorSec FROM DUAL;
:NEW.OID_PROVEEDOR := valorSec;
END;
/

----------------------------------------------------------------------------------------------------------------

CREATE TABLE EMPLEADOS (
    OID_EMPLEADO SMALLINT PRIMARY KEY,
    NOMBREEMPLEADO VARCHAR(124) NOT NULL,
    APELLIDOEMPLEADO VARCHAR(124) NOT NULL,
    NUMEROSS CHAR(12) NOT NULL UNIQUE, CHECK (REGEXP_LIKE(NUMEROSS, '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]')),
    CARGO VARCHAR(124) NOT NULL,
    SUELDO INTEGER NOT NULL, CHECK(SUELDO > 0),
    TIPOPENALIZACIONEMPLEADO VARCHAR(9), CHECK (TIPOPENALIZACIONEMPLEADO IN ('MONETARIA','DESPIDO')),
    OID_USUARIO SMALLINT NOT NULL UNIQUE,
    FOREIGN KEY(OID_USUARIO) REFERENCES USUARIOS
);

CREATE SEQUENCE Secuencia_Empleado INCREMENT BY 1 START WITH 1 MAXVALUE 99999;
/

create or replace TRIGGER Trigger_Secuencia_Empleado
BEFORE INSERT ON EMPLEADOS
FOR EACH ROW
DECLARE
valorSec NUMBER := 0;
BEGIN
SELECT Secuencia_Empleado.NEXTVAL INTO valorSec FROM DUAL;
:NEW.OID_EMPLEADO := valorSec;
END;
/

----------------------------------------------------------------------------------------------------------------

CREATE TABLE HORARIOS (
    OID_HORARIO SMALLINT PRIMARY KEY,
    HORASALIDA CHAR(5) NOT NULL, CHECK (REGEXP_LIKE(HORASALIDA, '[0-2][0-9]:[0-5][0-9]')),
    HORALLEGADA CHAR(5) NOT NULL, CHECK (REGEXP_LIKE(HORALLEGADA, '[0-2][0-9]:[0-5][0-9]')),
    DIASEMANA VARCHAR(9) NOT NULL, CHECK (DIASEMANA IN ('LUNES','MARTES','MIERCOLES','JUEVES','VIERNES','SABADO','DOMINGO')),
    OID_EMPLEADO SMALLINT NOT NULL,
    FOREIGN KEY(OID_EMPLEADO) REFERENCES EMPLEADOS
);

CREATE SEQUENCE Secuencia_Horario INCREMENT BY 1 START WITH 1 MAXVALUE 99999;
/

CREATE OR REPLACE TRIGGER Trigger_Secuencia_Horario
BEFORE INSERT ON HORARIOS
FOR EACH ROW
DECLARE
valorSec NUMBER := 0;
BEGIN
SELECT Secuencia_Horario.NEXTVAL INTO valorSec FROM DUAL;
:NEW.OID_HORARIO := valorSec;
END;
/

----------------------------------------------------------------------------------------------------------------

CREATE TABLE PRODUCTOS (
    OID_PRODUCTO SMALLINT PRIMARY KEY,
    NOMBREPRODUCTO VARCHAR(124) NOT NULL UNIQUE,
    CATEGORIA VARCHAR(124) NOT NULL,
    DESCRIPCION VARCHAR(256) NOT NULL UNIQUE,
    PRECIO INTEGER NOT NULL, check(precio > 0),
    IMAGEN VARCHAR(512) UNIQUE
);

CREATE SEQUENCE Secuencia_Producto INCREMENT BY 1 START WITH 1 MAXVALUE 99999;
/

CREATE OR REPLACE TRIGGER Trigger_Secuencia_Producto
BEFORE INSERT ON PRODUCTOS
FOR EACH ROW
DECLARE
valorSec NUMBER := 0;
BEGIN
SELECT Secuencia_Producto.NEXTVAL INTO valorSec FROM DUAL;
:NEW.OID_PRODUCTO := valorSec;
END;
/

----------------------------------------------------------------------------------------------------------------

CREATE TABLE PEDIDOS (
    OID_PEDIDO SMALLINT PRIMARY KEY,
    FECHALIMITE DATE NOT NULL,
    FECHAINICIO DATE NOT NULL,
    FECHAFIN DATE,
    TIPOPENALIZACIONPEDIDOS VARCHAR(20), CHECK (TIPOPENALIZACIONPEDIDOS IN ('MONETARIA','DESPIDO')),
    PENA INTEGER NOT NULL, CHECK ( PENA > 0),
    DESCUENTO INTEGER NOT NULL, CHECK ( DESCUENTO > 0),
    PRECIOTOTAL INTEGER NOT NULL, CHECK ( PRECIOTOTAL > 0),
    CANTIDADTOTAL INTEGER NOT NULL, CHECK ( CANTIDADTOTAL > 0),
    OID_CLIENTE SMALLINT NOT NULL,
    FOREIGN KEY(OID_CLIENTE) REFERENCES CLIENTES
);

CREATE SEQUENCE Secuencia_Pedido INCREMENT BY 1 START WITH 1 MAXVALUE 99999;
/

CREATE OR REPLACE TRIGGER Trigger_Secuencia_Pedido
BEFORE INSERT ON PEDIDOS
FOR EACH ROW
DECLARE
valorSec NUMBER := 0;
BEGIN
SELECT Secuencia_Pedido.NEXTVAL INTO valorSec FROM DUAL;
:NEW.OID_PEDIDO := valorSec;
END;
/

----------------------------------------------------------------------------------------------------------------

CREATE TABLE LINEAPEDIDOS (
    OID_LINEAPEDIDO SMALLINT PRIMARY KEY,
    CANTIDAD INTEGER NOT NULL, CHECK (CANTIDAD > 0),
    PRECIO INTEGER NOT NULL, CHECK(PRECIO > 0),
    OID_PEDIDO SMALLINT NOT NULL,
    OID_PRODUCTO SMALLINT NOT NULL,
    FOREIGN KEY(OID_PEDIDO) REFERENCES PEDIDOS,
    FOREIGN KEY(OID_PRODUCTO) REFERENCES PRODUCTOS
);

CREATE SEQUENCE Secuencia_Linea_Pedido INCREMENT BY 1 START WITH 1 MAXVALUE 99999;
/

CREATE OR REPLACE TRIGGER Trigger_Secuencia_Linea_Pedido
BEFORE INSERT ON LINEAPEDIDOS
FOR EACH ROW
DECLARE
valorSec NUMBER := 0;
BEGIN
SELECT Secuencia_Linea_Pedido.NEXTVAL INTO valorSec FROM DUAL;
:NEW.OID_LINEAPEDIDO := valorSec;
END;
/

----------------------------------------------------------------------------------------------------------------

CREATE TABLE MATERIALES (
    OID_MATERIAL SMALLINT PRIMARY KEY,
    NOMBREMATERIAL VARCHAR(124) NOT NULL UNIQUE,
    STOCK INTEGER NOT NULL, CHECK (STOCK > 0),
    PRECIOPORKILO INTEGER NOT NULL, CHECK (PRECIOPORKILO > 0)
);

CREATE SEQUENCE Secuencia_Material INCREMENT BY 1 START WITH 1 MAXVALUE 99999;
/

CREATE OR REPLACE TRIGGER Trigger_Secuencia_Material
BEFORE INSERT ON MATERIALES
FOR EACH ROW
DECLARE
valorSec NUMBER := 0;
BEGIN
SELECT Secuencia_Material.NEXTVAL INTO valorSec FROM DUAL;
:NEW.OID_MATERIAL := valorSec;
END;
/

------------------------------------------------------------------------------------------------------------

CREATE TABLE FABRICACIONES (
    OID_FABRICACION SMALLINT PRIMARY KEY,
    CANTIDAD INTEGER NOT NULL, CHECK (CANTIDAD > 0),
    OID_MATERIAL SMALLINT NOT NULL,
    OID_PRODUCTO SMALLINT NOT NULL,
    FOREIGN KEY(OID_MATERIAL) REFERENCES MATERIALES,
    FOREIGN KEY(OID_PRODUCTO) REFERENCES PRODUCTOS
);

CREATE SEQUENCE Secuencia_Fabricacion INCREMENT BY 1 START WITH 1 MAXVALUE 99999;
/

create or replace TRIGGER Trigger_Secuencia_Fabricacion
BEFORE INSERT ON FABRICACIONES
FOR EACH ROW
DECLARE
valorSec NUMBER := 0;
BEGIN
SELECT Secuencia_Fabricacion.NEXTVAL INTO valorSec FROM DUAL;
:NEW.OID_FABRICACION := valorSec;
END;
/

----------------------------------------------------------------------------------------------------------------

CREATE TABLE PEDIDOMATERIALES (
    OID_PEDIDOMATERIAL SMALLINT PRIMARY KEY,
    FECHALIMITEPM DATE NOT NULL,
    TIPOPENALIZACIONPM VARCHAR(20), CHECK (TIPOPENALIZACIONPM IN ('MONETARIA','CANCELACION')),
    PRECIOTOTALPM INTEGER NOT NULL, CHECK (PRECIOTOTALPM > 0),
    OID_EMPLEADO SMALLINT NOT NULL,
    OID_PROVEEDOR SMALLINT NOT NULL,
    FOREIGN KEY(OID_EMPLEADO) REFERENCES EMPLEADOS,
    FOREIGN KEY(OID_PROVEEDOR) REFERENCES PROVEEDORES
);

CREATE SEQUENCE Secuencia_P_Mat INCREMENT BY 1 START WITH 1 MAXVALUE 99999;
/

CREATE OR REPLACE TRIGGER Trigger_Secuencia_P_Mat
BEFORE INSERT ON PEDIDOMATERIALES
FOR EACH ROW
DECLARE
valorSec NUMBER := 0;
BEGIN
SELECT Secuencia_P_Mat.NEXTVAL INTO valorSec FROM DUAL;
:NEW.OID_PEDIDOMATERIAL := valorSec;
END;
/

----------------------------------------------------------------------------------------------------------------

CREATE TABLE LINEAPEDIDOMATERIALES (
    OID_LINEAPEDIDOMATERIAL SMALLINT PRIMARY KEY,
    CANTIDAD INTEGER NOT NULL, CHECK (CANTIDAD > 0),
    PRECIO INTEGER NOT NULL, CHECK(PRECIO > 0),
    OID_MATERIAL SMALLINT NOT NULL,
    OID_PEDIDOMATERIAL SMALLINT NOT NULL,
    FOREIGN KEY(OID_MATERIAL) REFERENCES MATERIALES,
    FOREIGN KEY(OID_PEDIDOMATERIAL) REFERENCES PEDIDOMATERIALES
);

CREATE SEQUENCE Secuencia_Linea_Pedido_Mat INCREMENT BY 1 START WITH 1 MAXVALUE 99999; 
/

CREATE OR REPLACE TRIGGER Trigger_S_LPM
BEFORE INSERT ON LINEAPEDIDOMATERIALES
FOR EACH ROW
DECLARE
valorSec NUMBER := 0;
BEGIN
SELECT Secuencia_Linea_Pedido_Mat.NEXTVAL INTO valorSec FROM DUAL;
:NEW.OID_LINEAPEDIDOMATERIAL := valorSec;
END;
/

----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
create or replace trigger fechalimite_mayor_que_actual
before insert or update of FECHALIMITE on PEDIDOS
for each row
declare
    v_fecha varchar(50) := :NEW.FECHALIMITE;
begin
    if v_fecha <sysdate then 
        RAISE_APPLICATION_ERROR(-20022, 'No puedes asignar una fecha limite anterior a la actual.');
    end if;
end;
/

----------------------------------------------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION INSERTAR_USUARIO (nick varchar, contra varchar) 
return SMALLINT
AS
    W_OID SMALLINT;
BEGIN
    INSERT INTO USUARIOS(NICKNAME, PASS, ROL) VALUES (NICK,CONTRA,'CLI');
    SELECT OID_USUARIO INTO W_OID FROM USUARIOS WHERE NICKNAME = NICK;
    RETURN W_OID;
END;
/
CREATE OR REPLACE PROCEDURE INSERTAR_CLIENTE 
  ( P_NICK IN USUARIOS.NICKNAME%TYPE,
    P_PASS IN USUARIOS.PASS%TYPE,
    P_NOMBRE IN CLIENTES.NOMBRE%TYPE,
    P_APELLIDO IN CLIENTES.APELLIDO%TYPE,
    P_CORREO IN CLIENTES.CORREO%TYPE,
    P_TELEFONO IN CLIENTES.TELEFONO%TYPE,
    P_CUENTABANCARIA IN CLIENTES.CUENTABANCARIA%TYPE,
    P_DIRECCION IN CLIENTES.DIRECCION%TYPE
   ) IS
BEGIN
  INSERT INTO CLIENTES(NOMBRE,APELLIDO,CORREO,TELEFONO, CUENTABANCARIA, DIRECCION,OID_USUARIO)
  VALUES (P_NOMBRE,P_APELLIDO,P_CORREO,P_TELEFONO,P_CUENTABANCARIA, P_DIRECCION,INSERTAR_USUARIO(P_NICK,P_PASS));
END;

----------------------------------------------------------------------------------------------------------------

/*
    DROP TABLE FABRICACIONES;
    DROP TABLE LINEAPEDIDOMATERIALES;
    DROP TABLE LINEAPEDIDOS;
    DROP TABLE PRODUCTOS;
    DROP TABLE PEDIDOS;
    DROP TABLE CLIENTES;
    DROP TABLE MATERIALES;
    DROP TABLE PEDIDOMATERIALES;
    DROP TABLE PROVEEDORES;
    DROP TABLE HORARIOS;
    DROP TABLE EMPLEADOS;
    DROP TABLE USUARIOS;
    
    DROP SEQUENCE Secuencia_Usuario;
    DROP SEQUENCE Secuencia_Fabricacion;
    DROP SEQUENCE Secuencia_Linea_Pedido_Mat;
    DROP SEQUENCE Secuencia_Linea_Pedido;
    DROP SEQUENCE Secuencia_Producto;
    DROP SEQUENCE Secuencia_Pedido;
    DROP SEQUENCE Secuencia_Cliente;
    DROP SEQUENCE Secuencia_Proveedor;
    DROP SEQUENCE Secuencia_Material;
    DROP SEQUENCE Secuencia_P_Mat;
    DROP SEQUENCE Secuencia_Horario;
    DROP SEQUENCE Secuencia_Empleado;
*/

----------------------------------------------------------------------------------------------------------------

INSERT INTO USUARIOS(NICKNAME, PASS, ROL) VALUES ('ANTSOLISMIR','1234', 'CLI');
INSERT INTO USUARIOS(NICKNAME, PASS, ROL) VALUES ('AANTSOLISMIR2','1234', 'ADM');
INSERT INTO USUARIOS(NICKNAME, PASS, ROL) VALUES ('AANTSOLISMIR','1234', 'EMP');

select * from USUARIOS;